import{_ as e,o,c as a,M as l}from"./chunks/framework.37cd2f1b.js";const h=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"cli/usage/configuration.md","filePath":"cli/usage/configuration.md","lastUpdated":1689506338000}'),t={name:"cli/usage/configuration.md"},n=l('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><h2 id="log-level" tabindex="-1">Log Level <a class="header-anchor" href="#log-level" aria-label="Permalink to &quot;Log Level&quot;">​</a></h2><p>Taplo uses the Rust <code>tracing</code> library for configurable logging features and respects the <code>RUST_LOG</code> environment variable. All logs regardless of log level are printed to the standard error output.</p><p>In most cases you might wish to disable logging below a certain log level. As an example if you wish to only see error messages, you can do the following:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">RUST_LOG</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">error</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">taplo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">lint</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">foo.toml</span></span></code></pre></div><p>The available log levels:</p><ul><li><code>trace</code></li><li><code>debug</code></li><li><code>info</code></li><li><code>warn</code></li><li><code>error</code></li></ul><h2 id="configuration-file" tabindex="-1">Configuration File <a class="header-anchor" href="#configuration-file" aria-label="Permalink to &quot;Configuration File&quot;">​</a></h2><p>Taplo CLI, by default, searches the current working directory for a Taplo configuration file. This behaviour can be disabled by either supplying <code>--no-auto-config</code> or <code>--config &lt;path&gt;</code> flags. The <code>TAPLO_CONFIG</code> environmental variable can also be used to set the configuration, but the <code>--config</code> flag will take precedence.</p>',9),i=[n];function s(r,c,d,p,g,u){return o(),a("div",null,i)}const _=e(t,[["render",s]]);export{h as __pageData,_ as default};
